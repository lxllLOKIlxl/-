import streamlit as st
import random
from datetime import datetime, timedelta

# –ü–æ—á–∞—Ç–∫–æ–≤–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Å—ñ—ó
if "username" not in st.session_state:
    st.session_state["username"] = None
if "planet" not in st.session_state:
    st.session_state["planet"] = 1
if "score" not in st.session_state:
    st.session_state["score"] = 0
if "lives" not in st.session_state:
    st.session_state["lives"] = 10
if "last_life_restore" not in st.session_state:
    st.session_state["last_life_restore"] = datetime.now()
if "current_question" not in st.session_state:
    st.session_state["current_question"] = None
if "question_pool" not in st.session_state:
    st.session_state["question_pool"] = []

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–ø–∏—Ç–∞–Ω—å –∑–∞ —Ä—ñ–≤–Ω—è–º–∏
def generate_questions():
    return {
        1: [
            {"question": "–©–æ —Ç–∞–∫–µ 2 + 2?", "answer": "4"},
            {"question": "–Ø–∫–∞ –ø–ª–∞–Ω–µ—Ç–∞ —Ç—Ä–µ—Ç—è –≤—ñ–¥ –°–æ–Ω—Ü—è?", "answer": "–ó–µ–º–ª—è"},
            {"question": "–Ø–∫–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 10 // 3?", "answer": "3"},
            {"question": "–Ø–∫–∞ –Ω–∞–π–±–ª–∏–∂—á–∞ –∑—ñ—Ä–∫–∞ –¥–æ –ó–µ–º–ª—ñ?", "answer": "–°–æ–Ω—Ü–µ"},
            {"question": "–°—Ç–æ–ª–∏—Ü—è –£–∫—Ä–∞—ó–Ω–∏?", "answer": "–ö–∏—ó–≤"},
            {"question": "–°–∫—ñ–ª—å–∫–∏ –¥–Ω—ñ–≤ —É –ª—é—Ç–æ–º—É —É –≤–∏—Å–æ–∫–æ—Å–Ω–∏–π —Ä—ñ–∫?", "answer": "29"},
            {"question": "–Ø–∫–∏–π –∫–æ–ª—ñ—Ä –º–∞—î –Ω–µ–±–æ?", "answer": "–°–∏–Ω—ñ–π"},
            {"question": "–°–∫—ñ–ª—å–∫–∏ –±—É–¥–µ 5 * 5?", "answer": "25"},
            {"question": "–Ø–∫–∏–π –æ–∫–µ–∞–Ω –Ω–∞–π–±—ñ–ª—å—à–∏–π?", "answer": "–¢–∏—Ö–∏–π"},
            {"question": "–Ø–∫–µ —á–∏—Å–ª–æ –π–¥–µ –ø—ñ—Å–ª—è 5?", "answer": "6"}
        ],
        2: [
            {"question": "–°–∫—ñ–ª—å–∫–∏ –ø–ª–∞–Ω–µ—Ç —É –°–æ–Ω—è—á–Ω—ñ–π —Å–∏—Å—Ç–µ–º—ñ?", "answer": "8"},
            {"question": "–©–æ —Ç–∞–∫–µ 9 * 9?", "answer": "81"},
            {"question": "–Ø–∫–∞ –ø–ª–∞–Ω–µ—Ç–∞ –Ω–∞–π–±–ª–∏–∂—á–µ –¥–æ –°–æ–Ω—Ü—è?", "answer": "–ú–µ—Ä–∫—É—Ä—ñ–π"},
            {"question": "–Ø–∫–∏–π —Ä—ñ–∫ –º–∞—î 366 –¥–Ω—ñ–≤?", "answer": "–í–∏—Å–æ–∫–æ—Å–Ω–∏–π"},
            # –î–æ–¥–∞–π—Ç–µ —â–µ –ø–∏—Ç–∞–Ω–Ω—è
        ],
        3: [
            {"question": "–©–æ —Ç–∞–∫–µ 12 * 12?", "answer": "144"},
            {"question": "–Ø–∫–∏–π —Å—É–ø—É—Ç–Ω–∏–∫ –æ–±–µ—Ä—Ç–∞—î—Ç—å—Å—è –Ω–∞–≤–∫–æ–ª–æ –ó–µ–º–ª—ñ?", "answer": "–ú—ñ—Å—è—Ü—å"},
            # –î–æ–¥–∞–π—Ç–µ —â–µ –ø–∏—Ç–∞–Ω–Ω—è
        ]
    }

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–ø–∏—Ç–∞–Ω—å –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Ä—ñ–≤–Ω—è
if not st.session_state["question_pool"]:
    st.session_state["question_pool"] = generate_questions()[st.session_state["planet"]]

# –í–∏–±—ñ—Ä –Ω–æ–≤–æ–≥–æ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è
def get_new_question():
    if st.session_state["question_pool"]:
        return random.choice(st.session_state["question_pool"])
    return None

# –ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ —Ä—ñ–≤–Ω—è
def next_level():
    st.session_state["planet"] += 1
    st.session_state["score"] = 0
    st.session_state["lives"] = 10
    st.session_state["question_pool"] = generate_questions().get(st.session_state["planet"], [])
    st.session_state["current_question"] = get_new_question()

# –û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ –≥—Ä–∏
st.title("üöÄ –ö–æ–¥–æ–Ω–∞–≤—Ç: –ö–æ—Å–º—ñ—á–Ω–∞ –ü—Ä–∏–≥–æ–¥–∞")
st.markdown("---")

# –í–≤–µ–¥–µ–Ω–Ω—è —ñ–º–µ–Ω—ñ –≥—Ä–∞–≤—Ü—è
if st.session_state["username"] is None:
    st.session_state["username"] = st.text_input("–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º'—è:")
    if st.session_state["username"]:
        st.session_state["current_question"] = get_new_question()
        st.experimental_rerun()

# –ü–∞–Ω–µ–ª—å –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –≥—Ä–∞–≤—Ü—è
with st.sidebar:
    st.header("–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –≥—Ä–∞–≤—Ü—è")
    st.write(f"**–Ü–º'—è:** {st.session_state['username']}")
    st.write(f"**‚ù§Ô∏è –ñ–∏—Ç—Ç—è:** {st.session_state['lives']} / 10")
    st.write(f"**üíØ –†–∞—Ö—É–Ω–æ–∫:** {st.session_state['score']}")
    st.write(f"**üåç –ü–ª–∞–Ω–µ—Ç–∞:** {st.session_state['planet']}")

    # –¢–∞–π–º–µ—Ä –¥–ª—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∂–∏—Ç—Ç—è
    if st.session_state["lives"] < 10:
        time_diff = datetime.now() - st.session_state["last_life_restore"]
        if time_diff >= timedelta(minutes=10):
            restore_lives = time_diff.seconds // 600
            st.session_state["lives"] += restore_lives
            st.session_state["lives"] = min(st.session_state["lives"], 10)
            st.session_state["last_life_restore"] = datetime.now()

        next_life_in = timedelta(minutes=10) - (datetime.now() - st.session_state["last_life_restore"])
        minutes, seconds = divmod(next_life_in.seconds, 60)
        st.info(f"‚è≥ –ù–∞—Å—Ç—É–ø–Ω–µ –∂–∏—Ç—Ç—è —á–µ—Ä–µ–∑: {minutes} —Ö–≤ {seconds} —Å.")

# –û—Å–Ω–æ–≤–Ω–∏–π –±–ª–æ–∫ –≥—Ä–∏
st.header("üåå –í–∞—à–∞ –º—ñ—Å—ñ—è")
if st.session_state["current_question"]:
    st.write(f"**–ó–∞–ø–∏—Ç–∞–Ω–Ω—è:** {st.session_state['current_question']['question']}")
    user_answer = st.text_input("üìù –í–∞—à–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å:")

    if st.button("–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏"):
        if user_answer.strip().lower() == st.session_state["current_question"]["answer"].lower():
            st.success("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! –í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ 10 –æ—á–∫—ñ–≤.")
            st.session_state["score"] += 10
            st.session_state["question_pool"].remove(st.session_state["current_question"])
        else:
            st.error("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! –í–∏ –≤—Ç—Ä–∞—Ç–∏–ª–∏ 1 –∂–∏—Ç—Ç—è.")
            st.session_state["lives"] -= 1

        if st.session_state["score"] >= 100:
            st.balloons()
            st.success("üéâ –í–∏ –ø–µ—Ä–µ–π—à–ª–∏ –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–∏–π —Ä—ñ–≤–µ–Ω—å!")
            next_level()
        elif st.session_state["lives"] <= 0:
            st.warning("üò¢ –£ –≤–∞—Å –∑–∞–∫—ñ–Ω—á–∏–ª–∏—Å—è –∂–∏—Ç—Ç—è. –ì—Ä—É –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")
        else:
            st.session_state["current_question"] = get_new_question()
            st.experimental_rerun()
else:
    st.info("üéâ –í–∏ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –≤—Å—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è —Ü—å–æ–≥–æ —Ä—ñ–≤–Ω—è. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å, —â–æ–± –ø–µ—Ä–µ–π—Ç–∏ –¥–∞–ª—ñ.")
