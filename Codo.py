import streamlit as st
import firebase_admin
from firebase_admin import credentials, db
import json
import io
from PIL import Image

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Firebase (–ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ –∑–∞–ø—É—â–µ–Ω–æ)
if not firebase_admin._apps:
    cred = credentials.Certificate({
        "type": st.secrets["firebase"]["type"],
        "project_id": st.secrets["firebase"]["project_id"],
        "private_key_id": st.secrets["firebase"]["private_key_id"],
        "private_key": st.secrets["firebase"]["private_key"].replace("\\n", "\n"),
        "client_email": st.secrets["firebase"]["client_email"],
        "client_id": st.secrets["firebase"]["client_id"],
        "auth_uri": st.secrets["firebase"]["auth_uri"],
        "token_uri": st.secrets["firebase"]["token_uri"],
        "auth_provider_x509_cert_url": st.secrets["firebase"]["auth_provider_x509_cert_url"],
        "client_x509_cert_url": st.secrets["firebase"]["client_x509_cert_url"]
    })
    firebase_admin.initialize_app(cred, {
        "databaseURL": st.secrets["firebase"]["databaseURL"]
    })

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ñ–æ—Ç–æ —É Firebase
def upload_photo(image_file):
    image_data = image_file.read()
    image_base64 = image_data.hex()  # –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ —É HEX
    return image_base64

st.title("Sm: –ì–∞–ª–µ—Ä–µ—è —Ñ–æ—Ç–æ —Ç–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å")

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–æ—Ç–æ
uploaded_file = st.file_uploader("–ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ —Ñ–æ—Ç–æ", type=["jpg", "png", "jpeg"])
description = st.text_area("–û–ø–∏—à—ñ—Ç—å —Ñ–æ—Ç–æ —Ç—É—Ç")

if uploaded_file and st.button("–ó–±–µ—Ä–µ–≥—Ç–∏ —Ñ–æ—Ç–æ"):
    image_data = upload_photo(uploaded_file)
    ref = db.reference("photos")
    ref.push({
        "image": image_data,
        "description": description
    })
    st.success("–§–æ—Ç–æ —É—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–µ!")

# –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≥–∞–ª–µ—Ä–µ—ó —Ñ–æ—Ç–æ
st.subheader("üì∏ –ì–∞–ª–µ—Ä–µ—è")
photos_ref = db.reference("photos").get()
if photos_ref:
    for photo_id, photo_data in photos_ref.items():
        image_bytes = bytes.fromhex(photo_data["image"])
        image = Image.open(io.BytesIO(image_bytes))
        st.image(image, use_container_width=True)
        st.write(f"**–û–ø–∏—Å:** {photo_data['description']}")

# –§–æ—Ä–º–∞ –¥–ª—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
st.subheader("üí¨ –ß–∞—Ç")
message = st.text_input("–ù–∞–ø–∏—à—ñ—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è")

if st.button("–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è"):
    ref = db.reference("messages")
    ref.push({
        "text": message,
        "timestamp": db.ServerValue.TIMESTAMP  # –î–æ–¥–∞—î–º–æ —á–∞—Å –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è
    })
    st.success("–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ!")

# –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
st.subheader("üì® –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è")
messages_ref = db.reference("messages").order_by_child("timestamp").get()
if messages_ref:
    for msg_id, msg_data in messages_ref.items():
        st.write(f"üí¨ {msg_data['text']}")
