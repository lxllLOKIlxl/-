import streamlit as st
import random
from datetime import datetime, timedelta

# –ü–æ—á–∞—Ç–∫–æ–≤—ñ –∑–º—ñ–Ω–Ω—ñ
if "planet" not in st.session_state:
    st.session_state["planet"] = 1
if "score" not in st.session_state:
    st.session_state["score"] = 0
if "lives" not in st.session_state:
    st.session_state["lives"] = 10
if "last_life_restore" not in st.session_state:
    st.session_state["last_life_restore"] = datetime.now()
if "username" not in st.session_state:
    st.session_state["username"] = None
if "task" not in st.session_state:
    st.session_state["task"] = None

# –û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è
st.title("üöÄ –ö–æ–¥–æ–Ω–∞–≤—Ç: –ö–æ—Å–º—ñ—á–Ω–∞ –ø—Ä–∏–≥–æ–¥–∞")
st.markdown("---")
col1, col2 = st.columns([3, 1])

# –í–≤–µ–¥–µ–Ω–Ω—è –Ω—ñ–∫—É –≥—Ä–∞–≤—Ü—è (–ø—Ä–∞–≤–∏–π –±–ª–æ–∫)
with col2:
    if st.session_state["username"] is None:
        st.session_state["username"] = st.text_input("üë§ –í–≤–µ–¥—ñ—Ç—å –≤–∞—à –Ω—ñ–∫:", value="–ì—Ä–∞–≤–µ—Ü—å")
        st.stop()

    st.markdown("### üë§ –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –≥—Ä–∞–≤—Ü—è:")
    st.markdown(f"**–Ü–º'—è:** {st.session_state['username']}")
    st.markdown(f"**‚ù§Ô∏è –ñ–∏—Ç—Ç—è:** {st.session_state['lives']} / 10")
    st.markdown(f"**üíØ –†–∞—Ö—É–Ω–æ–∫:** {st.session_state['score']}")
    st.markdown(f"**üåç –ü–ª–∞–Ω–µ—Ç–∞:** {st.session_state['planet']}")

    # –¢–∞–π–º–µ—Ä –¥–ª—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∂–∏—Ç—Ç—è
    if st.session_state["lives"] < 10:
        time_diff = datetime.now() - st.session_state["last_life_restore"]
        if time_diff >= timedelta(minutes=10):
            restore_lives = time_diff.seconds // 600
            st.session_state["lives"] += restore_lives
            st.session_state["lives"] = min(st.session_state["lives"], 10)
            st.session_state["last_life_restore"] = datetime.now()

        next_life_in = timedelta(minutes=10) - (datetime.now() - st.session_state["last_life_restore"])
        minutes, seconds = divmod(next_life_in.seconds, 60)
        st.info(f"‚è≥ –ù–∞—Å—Ç—É–ø–Ω–µ –∂–∏—Ç—Ç—è —á–µ—Ä–µ–∑: {minutes} —Ö–≤ {seconds} —Å.")

# –ü–∏—Ç–∞–Ω–Ω—è –¥–ª—è —Ä—ñ–≤–Ω—ñ–≤
questions = {
    1: [
        {"question": "–©–æ —Ç–∞–∫–µ 2 + 2?", "answer": "4"},
        {"question": "–Ø–∫–∞ –ø–ª–∞–Ω–µ—Ç–∞ —Ç—Ä–µ—Ç—è –≤—ñ–¥ –°–æ–Ω—Ü—è?", "answer": "–ó–µ–º–ª—è"},
        {"question": "–Ø–∫–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 10 // 3?", "answer": "3"},
        {"question": "–Ø–∫–∞ –Ω–∞–π–±–ª–∏–∂—á–∞ –∑—ñ—Ä–∫–∞ –¥–æ –ó–µ–º–ª—ñ?", "answer": "–°–æ–Ω—Ü–µ"},
        {"question": "–Ø–∫–µ —á–∏—Å–ª–æ –π–¥–µ –ø—ñ—Å–ª—è 5?", "answer": "6"},
        {"question": "–°—Ç–æ–ª–∏—Ü—è –£–∫—Ä–∞—ó–Ω–∏?", "answer": "–ö–∏—ó–≤"},
        {"question": "–°–∫—ñ–ª—å–∫–∏ –¥–Ω—ñ–≤ —É –ª—é—Ç–æ–º—É —É –≤–∏—Å–æ–∫–æ—Å–Ω–∏–π —Ä—ñ–∫?", "answer": "29"},
        {"question": "–Ø–∫–∏–π –∫–æ–ª—ñ—Ä –º–∞—î –Ω–µ–±–æ?", "answer": "–°–∏–Ω—ñ–π"},
        {"question": "–°–∫—ñ–ª—å–∫–∏ –±—É–¥–µ 5 * 5?", "answer": "25"},
        {"question": "–Ø–∫–∏–π –æ–∫–µ–∞–Ω –Ω–∞–π–±—ñ–ª—å—à–∏–π?", "answer": "–¢–∏—Ö–∏–π"}
    ],
    2: [
        {"question": "–°–∫—ñ–ª—å–∫–∏ –ø–ª–∞–Ω–µ—Ç —É –°–æ–Ω—è—á–Ω—ñ–π —Å–∏—Å—Ç–µ–º—ñ?", "answer": "8"},
        {"question": "–©–æ —Ç–∞–∫–µ 9 * 9?", "answer": "81"},
        {"question": "–Ø–∫–∞ –ø–ª–∞–Ω–µ—Ç–∞ –Ω–∞–π–±–ª–∏–∂—á–µ –¥–æ –°–æ–Ω—Ü—è?", "answer": "–ú–µ—Ä–∫—É—Ä—ñ–π"},
        # –î–æ–¥–∞–π—Ç–µ —â–µ 17 –ø–∏—Ç–∞–Ω—å
    ],
    3: [
        {"question": "–©–æ —Ç–∞–∫–µ 12 * 12?", "answer": "144"},
        {"question": "–Ø–∫–∏–π —Å—É–ø—É—Ç–Ω–∏–∫ –æ–±–µ—Ä—Ç–∞—î—Ç—å—Å—è –Ω–∞–≤–∫–æ–ª–æ –ó–µ–º–ª—ñ?", "answer": "–ú—ñ—Å—è—Ü—å"},
        # –î–æ–¥–∞–π—Ç–µ —â–µ 28 –ø–∏—Ç–∞–Ω—å
    ]
}

with col1:
    st.markdown("### üåå –ü–∏—Ç–∞–Ω–Ω—è:")
    if st.session_state["task"] is None:
        level_questions = questions[st.session_state["planet"]]
        st.session_state["task"] = random.choice(level_questions)

    current_task = st.session_state["task"]
    st.write(current_task["question"])

    user_answer = st.text_input("üìù –í–≤–µ–¥—ñ—Ç—å –≤–∞—à—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å:", key="user_answer")

    if st.button("–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏"):
        if st.session_state["lives"] > 0:
            if user_answer.strip().lower() == current_task["answer"].lower():
                st.session_state["score"] += 10
                st.success("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! –í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ 10 –æ—á–∫—ñ–≤.")
                st.session_state["task"] = None  # –ó–º—ñ–Ω–∏—Ç–∏ –ø–∏—Ç–∞–Ω–Ω—è
            else:
                st.session_state["lives"] -= 1
                st.error("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! –í–∏ –≤—Ç—Ä–∞—Ç–∏–ª–∏ 1 –∂–∏—Ç—Ç—è.")
        else:
            st.warning("–£ –≤–∞—Å –∑–∞–∫—ñ–Ω—á–∏–ª–∏—Å—è –∂–∏—Ç—Ç—è. –î–æ—á–µ–∫–∞–π—Ç–µ—Å—å –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–±–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç—ñ—Ç—å –≥—Ä—É!")

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ä—ñ–≤–Ω—è
    if st.session_state["score"] >= 100:
        st.session_state["planet"] += 1
        st.session_state["score"] = 0
        st.session_state["task"] = None
        if st.session_state["planet"] > 3:
            st.balloons()
            st.success(f"üéâ –í—ñ—Ç–∞—î–º–æ, {st.session_state['username']}! –í–∏ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –≥—Ä—É!")
        else:
            st.success(f"üéâ –í–∏ –ø–µ—Ä–µ–π—à–ª–∏ –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω—É –ø–ª–∞–Ω–µ—Ç—É! –ü–ª–∞–Ω–µ—Ç–∞ #{st.session_state['planet']} —á–µ–∫–∞—î –≤–∞—Å!")
