import streamlit as st
import random
from datetime import datetime, timedelta

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–µ—Å—ñ–π–Ω–∏—Ö –∑–º—ñ–Ω–Ω–∏—Ö
if "username" not in st.session_state:
    st.session_state["username"] = ""
if "planet" not in st.session_state:
    st.session_state["planet"] = 1
if "score" not in st.session_state:
    st.session_state["score"] = 0
if "lives" not in st.session_state:
    st.session_state["lives"] = 10
if "questions" not in st.session_state:
    st.session_state["questions"] = []
if "current_question" not in st.session_state:
    st.session_state["current_question"] = None
if "last_life_restore" not in st.session_state:
    st.session_state["last_life_restore"] = datetime.now()

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–ø–∏—Ç–∞–Ω—å
def generate_questions():
    return [
        {"question": "–©–æ —Ç–∞–∫–µ 2 + 2?", "answer": "4"},
        {"question": "–Ø–∫–∞ –ø–ª–∞–Ω–µ—Ç–∞ —Ç—Ä–µ—Ç—è –≤—ñ–¥ –°–æ–Ω—Ü—è?", "answer": "–ó–µ–º–ª—è"},
        {"question": "–Ø–∫–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 10 // 3?", "answer": "3"},
        {"question": "–Ø–∫–∞ –Ω–∞–π–±–ª–∏–∂—á–∞ –∑—ñ—Ä–∫–∞ –¥–æ –ó–µ–º–ª—ñ?", "answer": "–°–æ–Ω—Ü–µ"},
        {"question": "–Ø–∫–µ —á–∏—Å–ª–æ –π–¥–µ –ø—ñ—Å–ª—è 5?", "answer": "6"},
        {"question": "–°—Ç–æ–ª–∏—Ü—è –£–∫—Ä–∞—ó–Ω–∏?", "answer": "–ö–∏—ó–≤"},
        {"question": "–°–∫—ñ–ª—å–∫–∏ –¥–Ω—ñ–≤ —É –ª—é—Ç–æ–º—É —É –≤–∏—Å–æ–∫–æ—Å–Ω–∏–π —Ä—ñ–∫?", "answer": "29"},
        {"question": "–Ø–∫–∏–π –∫–æ–ª—ñ—Ä –º–∞—î –Ω–µ–±–æ?", "answer": "–°–∏–Ω—ñ–π"},
        {"question": "–°–∫—ñ–ª—å–∫–∏ –±—É–¥–µ 5 * 5?", "answer": "25"},
        {"question": "–Ø–∫–∏–π –æ–∫–µ–∞–Ω –Ω–∞–π–±—ñ–ª—å—à–∏–π?", "answer": "–¢–∏—Ö–∏–π"}
    ]

# –í–∏–±—ñ—Ä –Ω–æ–≤–æ–≥–æ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è
def get_new_question():
    if st.session_state["questions"]:
        return random.choice(st.session_state["questions"])
    return None

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∑–∞–ø–∏—Ç–∞–Ω—å
if not st.session_state["questions"]:
    st.session_state["questions"] = generate_questions()

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.title("üöÄ –ö–æ–¥–æ–Ω–∞–≤—Ç: –ö–æ—Å–º—ñ—á–Ω–∞ –ü—Ä–∏–≥–æ–¥–∞")

# –í–≤–µ–¥–µ–Ω–Ω—è —ñ–º–µ–Ω—ñ –≥—Ä–∞–≤—Ü—è
if not st.session_state["username"]:
    st.session_state["username"] = st.text_input("üë§ –í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º'—è:")
    if st.button("–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ —ñ–º'—è"):
        if st.session_state["username"].strip():
            st.success(f"–Ü–º'—è –∑–±–µ—Ä–µ–∂–µ–Ω–æ: {st.session_state['username']}")
            st.session_state["current_question"] = get_new_question()
            st.experimental_rerun()
        else:
            st.warning("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–µ —ñ–º'—è.")
else:
    # –ü–∞–Ω–µ–ª—å –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –≥—Ä–∞–≤—Ü—è
    st.sidebar.header("–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –≥—Ä–∞–≤—Ü—è")
    st.sidebar.write(f"**–Ü–º'—è:** {st.session_state['username']}")
    st.sidebar.write(f"**‚ù§Ô∏è –ñ–∏—Ç—Ç—è:** {st.session_state['lives']} / 10")
    st.sidebar.write(f"**üíØ –†–∞—Ö—É–Ω–æ–∫:** {st.session_state['score']}")
    st.sidebar.write(f"**üåç –ü–ª–∞–Ω–µ—Ç–∞:** {st.session_state['planet']}")

    # –û—Å–Ω–æ–≤–Ω–∞ –≥—Ä–∞
    if st.session_state["current_question"]:
        question = st.session_state["current_question"]
        st.write(f"**–ü–∏—Ç–∞–Ω–Ω—è:** {question['question']}")
        user_answer = st.text_input("üìù –í–≤–µ–¥—ñ—Ç—å –≤–∞—à—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å:")

        if st.button("–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏"):
            if user_answer.strip().lower() == question["answer"].lower():
                st.success("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! –í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ 10 –æ—á–∫—ñ–≤.")
                st.session_state["score"] += 10
                st.session_state["questions"].remove(question)
            else:
                st.error("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! –í–∏ –≤—Ç—Ä–∞—Ç–∏–ª–∏ 1 –∂–∏—Ç—Ç—è.")
                st.session_state["lives"] -= 1

            if st.session_state["score"] >= 100:
                st.balloons()
                st.success("üéâ –í–∏ –ø–µ—Ä–µ–π—à–ª–∏ –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–∏–π —Ä—ñ–≤–µ–Ω—å!")
                st.session_state["planet"] += 1
                st.session_state["score"] = 0
                st.session_state["questions"] = generate_questions()
            elif st.session_state["lives"] <= 0:
                st.warning("üò¢ –£ –≤–∞—Å –∑–∞–∫—ñ–Ω—á–∏–ª–∏—Å—è –∂–∏—Ç—Ç—è. –ì—Ä—É –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")
            else:
                st.session_state["current_question"] = get_new_question()
            
            st.experimental_rerun()
    else:
        st.info("üéâ –í–∏ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –≤—Å—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è —Ü—å–æ–≥–æ —Ä—ñ–≤–Ω—è.")
